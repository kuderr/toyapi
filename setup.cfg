[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    def __str__
    if TYPE_CHECKING:
fail_under = 95
show_missing = True
skip_covered = False

[coverage:run]
branch = True
omit =
    .venv/*


[flake8]
ignore =
    S101 ; use of assert detected - мы используем pytest
    I900 ; Package is not listed as a requirement - срабатывает всегда для "локального" пакета
    E501 ; Line too long - мы уже используем black
    W503 ; Line break before binary operator - конфликтует с black
    S311 ; Standard pseudo-random generators are not suitable for security/cryptographic purposes
per-file-ignores = __init__.py:F401
max-line-length = 120
max-expression-complexity = 8

[isort]
profile = black

[mypy]
check_untyped_defs = True
disallow_any_generics = True
disallow_incomplete_defs = True
disallow_untyped_defs = True
ignore_missing_imports = True
no_implicit_optional = True
show_error_codes = True
allow_redefinition = True
warn_unused_ignores = True
disable_error_code = misc

[mypy-tests.*]
disallow_incomplete_defs = False
disallow_untyped_defs = False

[pylint.]
fail-under = 10
disable =
    import-error,
    too-few-public-methods,
    duplicate-code,
    missing-module-docstring,
    missing-class-docstring,
    missing-function-docstring,
    redefined-outer-name,
    no-name-in-module,
    unspecified-encoding,
    raise-missing-from,
    fixme,
    too-many-locals,
    abstract-class-instantiated
ignored-classes=
    contextlib.closing,
good-names=i,pk,id,db
max-parents=10
max-line-length = 120


[tool:pytest]
addopts =
    -ra
    --log-level=DEBUG
    --showlocals
    --verbose
    --cov=./
    --cov-report=html